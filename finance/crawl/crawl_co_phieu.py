from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import pandas as pd
import time

# C·∫•u h√¨nh tr√¨nh duy·ªát
options = webdriver.ChromeOptions()
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")
options.add_argument("--start-maximized")

# Kh·ªüi t·∫°o tr√¨nh duy·ªát
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)

# M·ªü trang web
url = "https://liveboard.cafef.vn/"
driver.get(url)
time.sleep(5)

# Ch·ªù b·∫£ng d·ªØ li·ªáu xu·∫•t hi·ªán
try:
    table = WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.ID, "tblLiveboard"))
    )
    print("‚úÖ T√¨m th·∫•y b·∫£ng d·ªØ li·ªáu!")

    # Ch·ªù √≠t nh·∫•t 1 √¥ d·ªØ li·ªáu xu·∫•t hi·ªán
    WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, "#tblLiveboard tbody tr td"))
    )

    # Cu·ªôn trang ƒë·ªÉ t·∫£i h·∫øt d·ªØ li·ªáu
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
    time.sleep(3)  # Ch·ªù d·ªØ li·ªáu t·∫£i xong

except:
    print("‚ùå Kh√¥ng t√¨m th·∫•y b·∫£ng d·ªØ li·ªáu ho·∫∑c kh√¥ng c√≥ d·ªØ li·ªáu!")
    driver.quit()
    exit()

# L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng
rows = table.find_elements(By.TAG_NAME, "tr")
print(f"üîç S·ªë d√≤ng d·ªØ li·ªáu t√¨m th·∫•y: {len(rows)}")  # Debug s·ªë d√≤ng

data = []
for row in rows[1:]:  # B·ªè qua ti√™u ƒë·ªÅ
    cols = row.find_elements(By.TAG_NAME, "td")
    row_data = [col.text.strip() for col in cols]
    if row_data:  # Ch·ªâ th√™m n·∫øu h√†ng c√≥ d·ªØ li·ªáu
        data.append(row_data)

# Ki·ªÉm tra s·ªë c·ªôt th·ª±c t·∫ø
if data:
    num_columns = len(data[0])
    print(f"üîç S·ªë c·ªôt th·ª±c t·∫ø: {num_columns}")

    column_names = [
    "M√£", "T.C", "Tr·∫ßn", "S√†n",  # M√£ c·ªï phi·∫øu & Gi√° tham chi·∫øu
    "Gi√° 3", "KL 3", "Gi√° 2", "KL 2", "Gi√° 1", "KL 1",  # B√™n mua
    "+/-", "Gi√°", "KL", "T·ªïng KL",  # Kh·ªõp l·ªánh
    "Gi√° 1", "KL 1", "Gi√° 2", "KL 2", "Gi√° 3", "KL 3",  # B√™n b√°n
    "Cao", "Th·∫•p",  # Cao & Th·∫•p
    "KL Mua", "KL B√°n"  # ƒêTNN (ƒê·∫ßu t∆∞ n∆∞·ªõc ngo√†i)
   ]

    # Chuy·ªÉn d·ªØ li·ªáu th√†nh DataFrame
    df = pd.DataFrame(data, columns=column_names)

    # L∆∞u v√†o Excel
    df.to_excel("co_phieu_data.xlsx", index=False, engine="openpyxl")

    print("‚úÖ Crawl th√†nh c√¥ng! D·ªØ li·ªáu ƒë√£ l∆∞u v√†o co_phieu_data.xlsx üöÄ")
else:
    print("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l∆∞u!")

# ƒê√≥ng tr√¨nh duy·ªát
driver.quit()
